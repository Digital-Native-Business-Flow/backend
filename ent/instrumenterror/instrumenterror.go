// Code generated by entc, DO NOT EDIT.

package instrumenterror

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the instrumenterror type in the database.
	Label = "instrument_error"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldInstrumentID holds the string denoting the instrument_id field in the database.
	FieldInstrumentID = "instrument_id"
	// FieldCode holds the string denoting the code field in the database.
	FieldCode = "code"
	// FieldText holds the string denoting the text field in the database.
	FieldText = "text"
	// FieldOccurredAt holds the string denoting the occurred_at field in the database.
	FieldOccurredAt = "occurred_at"
	// EdgeCheck holds the string denoting the check edge name in mutations.
	EdgeCheck = "check"
	// Table holds the table name of the instrumenterror in the database.
	Table = "instrument_errors"
	// CheckTable is the table that holds the check relation/edge.
	CheckTable = "instrument_errors"
	// CheckInverseTable is the table name for the Instrument entity.
	// It exists in this package in order to avoid circular dependency with the "instrument" package.
	CheckInverseTable = "instruments"
	// CheckColumn is the table column denoting the check relation/edge.
	CheckColumn = "instrument_id"
)

// Columns holds all SQL columns for instrumenterror fields.
var Columns = []string{
	FieldID,
	FieldInstrumentID,
	FieldCode,
	FieldText,
	FieldOccurredAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// TextValidator is a validator for the "text" field. It is called by the builders before save.
	TextValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
