// Code generated by entc, DO NOT EDIT.

package ent

import (
	"backend/ent/instrument"
	"backend/ent/instrumenterror"
	"backend/ent/schema"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	instrumentFields := schema.Instrument{}.Fields()
	_ = instrumentFields
	// instrumentDescName is the schema descriptor for name field.
	instrumentDescName := instrumentFields[1].Descriptor()
	// instrument.NameValidator is a validator for the "name" field. It is called by the builders before save.
	instrument.NameValidator = instrumentDescName.Validators[0].(func(string) error)
	// instrumentDescID is the schema descriptor for id field.
	instrumentDescID := instrumentFields[0].Descriptor()
	// instrument.DefaultID holds the default value on creation for the id field.
	instrument.DefaultID = instrumentDescID.Default.(func() uuid.UUID)
	instrumenterrorFields := schema.InstrumentError{}.Fields()
	_ = instrumenterrorFields
	// instrumenterrorDescText is the schema descriptor for text field.
	instrumenterrorDescText := instrumenterrorFields[3].Descriptor()
	// instrumenterror.TextValidator is a validator for the "text" field. It is called by the builders before save.
	instrumenterror.TextValidator = instrumenterrorDescText.Validators[0].(func(string) error)
	// instrumenterrorDescID is the schema descriptor for id field.
	instrumenterrorDescID := instrumenterrorFields[0].Descriptor()
	// instrumenterror.DefaultID holds the default value on creation for the id field.
	instrumenterror.DefaultID = instrumenterrorDescID.Default.(func() uuid.UUID)
}
